package com.holmeslei.greendaodemo.database;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.holmeslei.greendaodemo.model.NoteBook;
import com.holmeslei.greendaodemo.model.NotePage;
import com.holmeslei.greendaodemo.model.NotePoint;
import com.holmeslei.greendaodemo.model.NoteStroke;

import com.holmeslei.greendaodemo.database.NoteBookDao;
import com.holmeslei.greendaodemo.database.NotePageDao;
import com.holmeslei.greendaodemo.database.NotePointDao;
import com.holmeslei.greendaodemo.database.NoteStrokeDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig noteBookDaoConfig;
    private final DaoConfig notePageDaoConfig;
    private final DaoConfig notePointDaoConfig;
    private final DaoConfig noteStrokeDaoConfig;

    private final NoteBookDao noteBookDao;
    private final NotePageDao notePageDao;
    private final NotePointDao notePointDao;
    private final NoteStrokeDao noteStrokeDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        noteBookDaoConfig = daoConfigMap.get(NoteBookDao.class).clone();
        noteBookDaoConfig.initIdentityScope(type);

        notePageDaoConfig = daoConfigMap.get(NotePageDao.class).clone();
        notePageDaoConfig.initIdentityScope(type);

        notePointDaoConfig = daoConfigMap.get(NotePointDao.class).clone();
        notePointDaoConfig.initIdentityScope(type);

        noteStrokeDaoConfig = daoConfigMap.get(NoteStrokeDao.class).clone();
        noteStrokeDaoConfig.initIdentityScope(type);

        noteBookDao = new NoteBookDao(noteBookDaoConfig, this);
        notePageDao = new NotePageDao(notePageDaoConfig, this);
        notePointDao = new NotePointDao(notePointDaoConfig, this);
        noteStrokeDao = new NoteStrokeDao(noteStrokeDaoConfig, this);

        registerDao(NoteBook.class, noteBookDao);
        registerDao(NotePage.class, notePageDao);
        registerDao(NotePoint.class, notePointDao);
        registerDao(NoteStroke.class, noteStrokeDao);
    }
    
    public void clear() {
        noteBookDaoConfig.clearIdentityScope();
        notePageDaoConfig.clearIdentityScope();
        notePointDaoConfig.clearIdentityScope();
        noteStrokeDaoConfig.clearIdentityScope();
    }

    public NoteBookDao getNoteBookDao() {
        return noteBookDao;
    }

    public NotePageDao getNotePageDao() {
        return notePageDao;
    }

    public NotePointDao getNotePointDao() {
        return notePointDao;
    }

    public NoteStrokeDao getNoteStrokeDao() {
        return noteStrokeDao;
    }

}
